Heap Sort 是一種基於二元堆積（Binary Heap）資料結構的比較排序技術。它與選擇排序類似，首先找到最小的元素並將其放在開始位置，然後對剩餘元素重複相同的過程。以下是 Heap Sort 的演算法步驟：

建立最大堆（Max Heap）：將輸入的陣列轉換為最大堆資料結構。最大堆的特性是父節點的值大於或等於其子節點的值。這可以通過遞迴地將每個節點與其子節點進行比較並交換來實現。
進行排序：重複以下步驟，直到堆中只剩下一個元素：
將堆的根節點（即最大的元素）與堆的最後一個元素交換。
刪除堆的最後一個元素（此時它已經在正確的位置上）。
對剩餘的元素進行堆化（Heapify）。
反轉陣列：排序後的陣列是反轉的，因此需要將其元素順序反轉，即可得到最終的排序結果。
以下是一個示例，我們使用 Heap Sort 將陣列 {4, 10, 3, 5, 1} 進行排序：

建立完整二元樹：
    4
   / \
  10  3
 / \
5   1

轉換為最大堆：
    10
   / \
  5   3
 / \
4   1

進行排序：
刪除根節點 10，將其與最後一個元素 1 交換，然後堆化：
  1
 / \
5   3

/ 4
- 刪除根節點 5，將其與最後一個元素 3 交換，然後堆化：

3
/
1 4
- 刪除根節點 3，將其與最後一個元素 4 交換，然後堆化：

1
/ 4
- 刪除根節點 1，排序完成，最終的排序結果為 `{1, 3, 4, 5, 10}`。
